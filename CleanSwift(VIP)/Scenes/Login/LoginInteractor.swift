//
//  LoginInteractor.swift
//  CleanSwift(VIP)
//
//  Created by Steve JobsOne on 4/14/20.
//  Copyright (c) 2020 Steve JobsOne. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol LoginBusinessLogicDelegate {
    func loginRequestWith(request: Login.Request)
}

protocol LoginDataStoreDelegate {
    //var name: String { get set }
}

class LoginInteractor: LoginBusinessLogicDelegate, LoginDataStoreDelegate,LoginWarkerDelegate {
    
    var presenterDelegate: LoginPresentationLogicDelegate?
    var worker: LoginWorker?
    //var name: String = ""
    
    // MARK: Do something
    
    func loginRequestWith(request: Login.Request) {
        worker = LoginWorker()
        worker?.loginWarkerDelegate = self
        
        
        worker?.loginWith(request: request)
        
        //            if let strongSelf = self{
        //                strongSelf.presenterDelegate?.loaderShowOrHidden(flag: false)
        //                strongSelf.presenterDelegate?.login(response: Login.Response.LoginStatus(success: true))
        //            }
        //        }
        
    }
    
    // MARK: - LoginWarkerDelegate
    
    func loaderWillShow(flag: Bool) {
        switch flag {
        case true:
            self.presenterDelegate?.loaderShowOrHidden(flag: flag)
            break
        default:
            self.presenterDelegate?.loaderShowOrHidden(flag: flag)
            break
        }
    }
    
    //MARK: presentError
    func presentError(error: Error) {
        self.presenterDelegate?.presentError(error: error)
    }
    
    func loginResponse(response: Login.Response.SignIn) {
        Token.shared.accessToken = response.access_token
        self.presenterDelegate?.login(response: Login.Response.LoginStatus(success: true))
    }
}
